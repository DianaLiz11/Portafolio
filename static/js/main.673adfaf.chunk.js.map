{"version":3,"sources":["images/cipher.png","images/pokemon.png","images/mdlinks.png","images/diana.jpg","components/Navigation.js","data/projectsData.js","components/Projects.js","views/Home.js","views/AboutMe.js","views/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","navigation","props","react_default","a","createElement","className","react_router_dom","exact","to","title","id","ProjectsList","name","urlGit","urlDeploy","urlImage","cipher","description","pokemon","mdlinks","Projects","projects","map","project","src","alt","href","Home","components_Projects","AboutMe","diana","Contact","App","Navigation","react_router","path","component","render","views_Contact","Component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.673adfaf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cipher.9cc3f8de.png\";","module.exports = __webpack_public_path__ + \"static/media/pokemon.f58012fe.png\";","module.exports = __webpack_public_path__ + \"static/media/mdlinks.8e2020bd.png\";","module.exports = __webpack_public_path__ + \"static/media/diana.101cf369.jpg\";","import React from 'react';\nimport {Link} from 'react-router-dom';\n\n\n\nconst navigation = (props)=> (\n  <nav>\n    <div className='nav-wrapper pink accent-4'>\n      <Link exact to='/' className='brand-logo left'>{props.title}</Link>\n      <ul id=\"nav-mobile\" className=\"right\">\n        <li><Link exact to='/'>Inicio</Link></li>\n        <li><Link to='/AboutMe'>acerca de mi</Link></li>\n        <li><Link to='/Contact'>Contactame</Link></li>\n      </ul>\n    </div>\n  </nav>\n)\n\nexport default navigation;\n","import cipher from '../images/cipher.png';\nimport pokemon from '../images/pokemon.png';\nimport mdlinks from '../images/mdlinks.png';\nexport const ProjectsList = [\n  {\n    id:1,\n    name:'InfoCipher',\n    urlGit:'https://github.com/DianaLiz11/cdmx-2019-01-bc-core-am-cipher',\n    urlDeploy:'https://dianaliz11.github.io/cdmx-2019-01-bc-core-am-cipher/src/',\n    urlImage:cipher,\n    description:'Es una página Web que permite realizar el cifrado y descifrado de un texto, esta enfocada al mundo laboral donde se requiere transmitir información, la cual en muchas ocasiones es informacón sensible, derivado de ello, InfoCipher te permite codificar dicha información sensible para poder enviarla a su destinatario sin temor de que ésta pueda ser robada y hacer mal uso de la misma. Esta página esta desarrollada con HTML, CSS y Javascript Vanilla'\n  },\n  {\n    id:2,\n    name:'Enciclopedia Pokemon',\n    urlGit:'https://github.com/DianaLiz11/cdmx-2019-01-bc-core-data-lovers',\n    urlDeploy:'https://dianaliz11.github.io/cdmx-2019-01-bc-core-data-lovers/src/',\n    urlImage:pokemon,\n    description:'Es una página Web que nos proporciona información básica de los Pokemones que aparecen en el famoso juego de Pokémon Go, esta página Web te permite conocer que pokemones existen y clasificarlos por su tipo, así como verlos ordenados dependiendo de algunos criterios que el usuario seleccione. Esta pagina se desarrollo con HTML, CSS y Javascript, en esta página tambien se hace el consumo de una API.'\n  },\n  {\n    id:3,\n    name:'mdLinks-dlmp',\n    urlGit:'https://github.com/DianaLiz11/CDMX007-fe-md-links',\n    urlDeploy:'https://www.npmjs.com/package/mdlinks-dlmp',\n    urlImage:mdlinks,\n    description:'Es una libreria de npm que te permite leer los archivos Markdown e identificar los links que contiene dicho archivo, mediante comandos el usuario puede solicitar ver el listado de links o bien estadísticas del número de links existentes en el archivo o el número de links rotos. Para su desarrollo se utilizó Javascript, Node.js, y la libreria Markdown-it.'\n  }\n];\n","import React from 'react';\nimport {ProjectsList} from '../data/projectsData';\n\nconst Projects = () => {\n  let projects = ProjectsList.map((project) => {\n    return (\n      <div className='card'>\n        <div className='card-image waves-effect waves-block waves-light'>\n          <img className='activator' src={project.urlImage} alt={project.name}/>\n        </div>\n      <div className='card-content'>\n        <span className='card-title activator grey-text text-darken-4'>{project.name}<i className='material-icons right'>more_vert</i></span>\n        <p><a href={project.urlGit}>Link del proyecto en github</a></p>\n        <p><a href={project.urlDeploy}>Link Demo</a></p>\n      </div>\n      <div className=\"card-reveal\">\n        <span className='card-title pink-text text-accent-3'>{project.name}<i className='material-icons right'>close</i></span>\n        <p>{project.description}</p>\n      </div>\n    </div>\n    );\n  });\n\n  return (\n    <div className='container'>\n      <div>\n        {projects}\n      </div>\n    </div>\n  );\n}\n\nexport default Projects;\n","import React from 'react';\nimport Projects from '../components/Projects';\nimport '../App.css';\n\nconst Home = () => (\n  <div className = 'container'>\n    <h4 className='teal-text text-lighten-2'>Mis proyectos</h4>\n    <p>Durante mi preparación en Laboratoria, he realizado varios proyectos\n    que han contribuido a mi desarrollo profesional y me han permitido\n    obtener nuevos conocimientos.</p>\n    <p>A continuación te presento algunos de estos proyectos en los\n    que he participado.</p>\n    <div className=\"divider\"></div>\n    <Projects />\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\nimport diana from '../images/diana.jpg';\n\nconst AboutMe = () => (\n  <div className = 'container'>\n    <div className='row'>\n      <div className='col s4'>\n        <img className='z-depth-3 circle responsive-img' src={diana} alt='Diana' />\n      </div>\n      <div className='col s8'></div>\n        <h4 className='teal-text text-lighten-2'>Diana Muñoz</h4>\n        <h6 className='pink-text text-lighten-2'>Licenciada en Informática</h6>\n        <p>Además de haber estudiado la Licenciatura, realice un bootcamp en\n          Laboratoria con la especialidad de <strong>Front End Developer</strong>. Estoy consciente\n          que todo va cambiando día a día, por lo cual siempre busco aprender\n          cosas nuevas.</p>\n        <p>En el ámbito profesional he trabajado en diferentes áreas, de las\n          cuales me he llevado grandes aprendizajes.</p>\n    </div>\n  </div>\n);\n\nexport default AboutMe;\n","import React from 'react';\n\nconst Contact = () => (\n  <div className = 'container'>\n    <h4 className='teal-text text-lighten-2'>Me puedes encontrar aquí:</h4>\n    <table className=\"responsive-table\">\n        <tbody>\n          <tr>\n            <td><i className='fab fa-github'></i></td>\n            <td>https://github.com/DianaLiz11/</td>\n          </tr>\n          <tr>\n            <td><i className='fab fa-linkedin'></i></td>\n            <td>https://www.linkedin.com/in/diana-lizbeth-mu%C3%B1oz-p%C3%A9rez/</td>\n          </tr>\n          <tr>\n            <td><i className='fab fa-google'></i></td>\n            <td>dianamunoz86@gmail.com</td>\n          </tr>\n        </tbody>\n      </table>\n  </div>\n);\n\nexport default Contact;\n","import React, {Component} from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport './App.css';\nimport Navigation from './components/Navigation';\nimport Home from './views/Home';\nimport AboutMe from './views/AboutMe';\nimport Contact from './views/Contact'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <header>\n            <Navigation title =\"DM\" />\n          </header>\n          <Route exact path=\"/\" component={Home}/>\n          <Route path=\"/AboutMe\" component={AboutMe}/>\n          <Route path=\"/Contact\" render={()=> <Contact />}/>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n\n\n\n// <Route exact path=\"/\" render={()=> <Home title = \"Mis proyectos\" />}/>\n// <Route path=\"/AboutMe\" render={()=> <AboutMe title = \"Acerca de mi\" />}/>\n// <Route path=\"/Contact\" render={()=> <Contact title = \"Contactame\" />}/>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}